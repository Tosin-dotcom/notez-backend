# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

env:
  DB_URL: ${{ secrets.DB_URL }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  PORT : ${{ secrets.PORT }}
  AWS_ACCESS_KEY : ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET : ${{ secrets.AWS_SECRET }}
  AWS_BUCKET_NAME : ${{ secrets.AWS_BUCKET_NAME }}
  NOTEZ_SECRET_KEY : ${{ secrets.NOTEZ_SECRET_KEY }}
  NOTEZ_ADMIN_EMAIL : ${{ secrets.NOTEZ_ADMIN_EMAIL }}
  NOTEZ_ADMIN_PASSWORD : ${{ secrets.NOTEZ_ADMIN_PASSWORD }}
  CDN_URL : ${{ secrets.CDN_URL }}
  JAR_PATH: "/home/ec2-user/actions-runner/_work/notez-backend/notez-backend/build/libs/notez-0.0.1.jar"
  EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
  EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  EC2_REMOTE_PATH: "/home/ec2-user/actions-runner/_work/notez-backend/notez-backend/build/libs"



jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Set execute permissions for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Kill process running on port ${{ env.PORT }}
      run: sudo kill $(sudo lsof -t -i:${{ env.PORT }}) || true

    - name: Run JAR file
      run: java -jar /home/ec2-user/actions-runner/_work/notez-backend/notez-backend/build/libs/notez-0.0.1.jar &

    - name: Deploy to EC2 instance
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            scp $JAR_PATH ec2-user@${{ secrets.EC2_PUBLIC_IP }}:${{ secrets.EC2_REMOTE_PATH }}
            ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_PRIVATE_KEY }} ec2-user@${{ secrets.EC2_PUBLIC_IP }} "java -jar ${{ secrets.EC2_REMOTE_PATH }}/notez-0.0.1.jar &"

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
