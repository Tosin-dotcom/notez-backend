/*
 * This file is generated by jOOQ.
 */
package com.tosin.notez.tables.daos;


import com.tosin.notez.tables.Categories;
import com.tosin.notez.tables.records.CategoriesRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.13"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class CategoriesDao extends DAOImpl<CategoriesRecord, com.tosin.notez.tables.pojos.Categories, UUID> {

    /**
     * Create a new CategoriesDao without any configuration
     */
    public CategoriesDao() {
        super(Categories.CATEGORIES, com.tosin.notez.tables.pojos.Categories.class);
    }

    /**
     * Create a new CategoriesDao with an attached configuration
     */
    @Autowired
    public CategoriesDao(Configuration configuration) {
        super(Categories.CATEGORIES, com.tosin.notez.tables.pojos.Categories.class, configuration);
    }

    @Override
    public UUID getId(com.tosin.notez.tables.pojos.Categories object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.tosin.notez.tables.pojos.Categories> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Categories.CATEGORIES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.tosin.notez.tables.pojos.Categories> fetchById(UUID... values) {
        return fetch(Categories.CATEGORIES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.tosin.notez.tables.pojos.Categories fetchOneById(UUID value) {
        return fetchOne(Categories.CATEGORIES.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.tosin.notez.tables.pojos.Categories> fetchOptionalById(UUID value) {
        return fetchOptional(Categories.CATEGORIES.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.tosin.notez.tables.pojos.Categories> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Categories.CATEGORIES.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.tosin.notez.tables.pojos.Categories> fetchByName(String... values) {
        return fetch(Categories.CATEGORIES.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public com.tosin.notez.tables.pojos.Categories fetchOneByName(String value) {
        return fetchOne(Categories.CATEGORIES.NAME, value);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public Optional<com.tosin.notez.tables.pojos.Categories> fetchOptionalByName(String value) {
        return fetchOptional(Categories.CATEGORIES.NAME, value);
    }

    /**
     * Fetch records that have <code>image_url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.tosin.notez.tables.pojos.Categories> fetchRangeOfImageUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(Categories.CATEGORIES.IMAGE_URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>image_url IN (values)</code>
     */
    public List<com.tosin.notez.tables.pojos.Categories> fetchByImageUrl(String... values) {
        return fetch(Categories.CATEGORIES.IMAGE_URL, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.tosin.notez.tables.pojos.Categories> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Categories.CATEGORIES.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.tosin.notez.tables.pojos.Categories> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Categories.CATEGORIES.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.tosin.notez.tables.pojos.Categories> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Categories.CATEGORIES.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.tosin.notez.tables.pojos.Categories> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Categories.CATEGORIES.UPDATED_AT, values);
    }
}
